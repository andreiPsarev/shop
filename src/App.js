import React, { useState } from "react";
import { createRoot } from "react-dom/client";
import "./styles.css";

// –ü—Ä–∏–º–µ—Ä —Ç–æ–≤–∞—Ä–æ–≤
const products = [
  {
    id: 1,
    name: "–§—É—Ç–±–æ–ª–∫–∞",
    desc: "–•–ª–æ–ø–∫–æ–≤–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞",
    price: 500,
    img: "/img/bl-alt.jpg", // –ë–∞–∑–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    colors: ["–°–∏–Ω–∏–π", "–ß–µ—Ä–Ω—ã–π"],
    sizes: ["S", "M", "L"],
    imagesByColor: {
      –°–∏–Ω–∏–π: "/img/bl-alt.jpg", // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Å–∏–Ω–∏—Ö –¥–∂–∏–Ω—Å–æ–≤
      –ß–µ—Ä–Ω—ã–π: "/img/bl-alt-c.jpg", // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —á–µ—Ä–Ω—ã—Ö –¥–∂–∏–Ω—Å–æ–≤
    },
  },
  {
    id: 2,
    name: "–î–∂–∏–Ω—Å—ã",
    desc: "–£–∑–∫–∏–µ –¥–∂–∏–Ω—Å—ã",
    price: 1200,
    img: "/img/bl-alt.jpg", // –ë–∞–∑–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    colors: ["–°–∏–Ω–∏–π", "–ß–µ—Ä–Ω—ã–π"],
    sizes: ["M", "L", "XL"],
    imagesByColor: {
      –°–∏–Ω–∏–π: "/img/bl-alt.jpg", // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Å–∏–Ω–∏—Ö –¥–∂–∏–Ω—Å–æ–≤
      –ß–µ—Ä–Ω—ã–π: "/img/bl-alt-c.jpg", // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —á–µ—Ä–Ω—ã—Ö –¥–∂–∏–Ω—Å–æ–≤
    },
  },  
  {
    id: 3,
    name: "–î–∂–∏–Ω—Å—ã",
    desc: "–£–∑–∫–∏–µ –¥–∂–∏–Ω—Å—ã",
    price: 1200,
    img: "/img/bl-alt.jpg", // –ë–∞–∑–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    colors: ["–°–∏–Ω–∏–π", "–ß–µ—Ä–Ω—ã–π"],
    sizes: ["M", "L", "XL"],
    imagesByColor: {
      –°–∏–Ω–∏–π: "/img/bl-alt.jpg", // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Å–∏–Ω–∏—Ö –¥–∂–∏–Ω—Å–æ–≤
      –ß–µ—Ä–Ω—ã–π: "/img/bl-alt-c.jpg", // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —á–µ—Ä–Ω—ã—Ö –¥–∂–∏–Ω—Å–æ–≤
    },
  },
];

// –ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞
const ProductCard = ({ product, addToCart }) => {
  const [color, setColor] = useState(product.colors[0]);
  const [size, setSize] = useState(product.sizes[0]);
  const [image, setImage] = useState(product.imagesByColor[color]);

  const colorStyles = {
    –ë–µ–ª—ã–π: "#ffffff",
    –ß–µ—Ä–Ω—ã–π: "#000000",
    –°–∏–Ω–∏–π: "#0000FF", // –î–ª—è —Å–∏–Ω–µ–≥–æ
  };

  const handleColorChange = (color) => {
    setColor(color);
    setImage(product.imagesByColor[color]); // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏ —Å–º–µ–Ω–µ —Ü–≤–µ—Ç–∞
  };

  return (
    <div className="card">
      <img src={image} alt={product.name} />
      <h3>{product.name}</h3>
      <p>{product.desc}</p>
      <p><strong>{product.price} –≥—Ä–Ω</strong></p>

      {/* –¶–≤–µ—Ç */}
      <div className="colors">
        {product.colors.map((c) => (
          <span
            key={c}
            className="color-circle"
            style={{ 
              backgroundColor: colorStyles[c], // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ü–≤–µ—Ç –¥–ª—è –∫—Ä—É–∂–∫–æ–≤
              borderRadius: "50%", // –≠—Ç–æ —Å–¥–µ–ª–∞–µ—Ç –∫—Ä—É–∂–æ–∫ –∫—Ä—É–≥–æ–º
              width: "20px", // –†–∞–∑–º–µ—Ä –∫—Ä—É–∂–∫–∞
              height: "20px", // –†–∞–∑–º–µ—Ä –∫—Ä—É–∂–∫–∞
              margin: "5px", // –û—Ç—Å—Ç—É–ø –º–µ–∂–¥—É –∫—Ä—É–∂–∫–∞–º–∏
              cursor: "pointer", // –£–∫–∞–∑–∞—Ç–µ–ª—å –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
            }}
            onClick={() => handleColorChange(c)} // –ü—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫—Ä—É–∂–æ–∫ –º–µ–Ω—è–µ–º —Ü–≤–µ—Ç –∏ —Ñ–æ—Ç–æ
          />
        ))}
      </div>

      {/* –†–∞–∑–º–µ—Ä */}
      <label>–†–∞–∑–º–µ—Ä:
        <select onChange={(e) => setSize(e.target.value)} value={size}>
          {product.sizes.map(s => <option key={s} value={s}>{s}</option>)}
        </select>
      </label>

      <button onClick={() => addToCart({ ...product, color, size })}>–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É</button>
    </div>
  );
};

// –ö–æ—Ä–∑–∏–Ω–∞
const Cart = ({ cart, onCheckout, onClose }) => (
  <div className="cart">
    <button onClick={onClose} className="close-btn">X</button>
    <h2>–ö–æ—Ä–∑–∏–Ω–∞</h2>
    {cart.length === 0 ? <p>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p> :
      cart.map((item, index) => (
        <p key={index}>{item.name} ({item.color}, {item.size}) - {item.price} –≥—Ä–Ω</p>
      ))}
    <button onClick={onCheckout} disabled={cart.length === 0}>–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑</button>
  </div>
);

// –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
const Checkout = ({ onSubmit }) => {
  const [name, setName] = useState("");
  const [phone, setPhone] = useState("");

  return (
    <div className="checkout">
      <h2>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h2>
      <input type="text" placeholder="–ò–º—è" value={name} onChange={(e) => setName(e.target.value)} />
      <input type="tel" placeholder="–¢–µ–ª–µ—Ñ–æ–Ω" value={phone} onChange={(e) => setPhone(e.target.value)} />
      <button onClick={() => onSubmit(name, phone)} disabled={!name || !phone}>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑</button>
    </div>
  );
};

const App = () => {
  const [cart, setCart] = useState([]);
  const [isCartOpen, setIsCartOpen] = useState(false);

  const addToCart = (product) => setCart([...cart, product]);
  const handleCheckout = () => alert('–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω');
  const submitOrder = (name, phone) => {
    console.log("–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω:", { name, phone, cart });
    alert(`–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ò–º—è: ${name}, –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}`);
    setCart([]);
    setIsCartOpen(false);
  };

  return (
    <div className="container">
      {/* –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å */}
      <nav className="navbar">
        <ul>
          <li><a href="#home">–ì–ª–∞–≤–Ω–∞—è</a></li>
          <li><a href="#shop">–ú–∞–≥–∞–∑–∏–Ω</a></li>
          <li><a href="#contact">–ö–æ–Ω—Ç–∞–∫—Ç—ã</a></li>
        </ul>
        {/* –ü–µ—Ä–µ–Ω–æ—Å–∏–º –∫–Ω–æ–ø–∫—É –∫–æ—Ä–∑–∏–Ω—ã –≤ –Ω–∞–≤–±–∞—Ä */}
        <button className="cart-icon" onClick={() => setIsCartOpen(!isCartOpen)}>
          üõí –ö–æ—Ä–∑–∏–Ω–∞ ({cart.length})
        </button>
      </nav>

      <h1>–ú–∞–≥–∞–∑–∏–Ω –æ–¥–µ–∂–¥—ã</h1>

      {/* –ö–æ—Ä–∑–∏–Ω–∞ */}
      {isCartOpen && <Cart cart={cart} onCheckout={handleCheckout} onClose={() => setIsCartOpen(false)} />}

      <div className="products">
        {products.map(p => <ProductCard key={p.id} product={p} addToCart={addToCart} />)}
      </div>
    </div>
  );
};

const root = createRoot(document.getElementById("root"));
root.render(<App />);

export default App;
